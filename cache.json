[{"type_of":"article","id":1573878,"title":"Using Azure Function to Run Machine Learning Model","description":"☀️☀️☀️  Hi! How's your weekend? I hope it's great. I've been taking a long break since I moved into a...","published":true,"published_at":"2023-08-20T13:10:07.793Z","slug":"deploy-a-machine-learning-model-to-azure-function-2gdf","path":"/wildanazz/deploy-a-machine-learning-model-to-azure-function-2gdf","url":"https://dev.to/wildanazz/deploy-a-machine-learning-model-to-azure-function-2gdf","comments_count":0,"public_reactions_count":0,"page_views_count":58,"published_timestamp":"2023-08-20T13:10:07Z","body_markdown":"<p class=\"text-center\">☀️☀️☀️</p>\n<p>Hi! How's your weekend? I hope it's great. I've been taking a long break since I moved into a new place. Anyway, I'd like to show you guys how I managed to utilize Azure Function to run machine learning model. Hopefully, by the end of this post, you guys are able to understand how Azure Function works and run any applications using Azure Function.</p>\n<hr/>\n\n<h3>What's Azure function?</h3>\n<p>Azure function is just another service among other good services offered by Microsoft Azure. It's known as a serverless solution. That is, it allow us to focus writing code instead of worrying too much about server infrastructure.</p>\n\n<p>So what are the differences between Azure function and virtual machine? Azure function is more cost-effective. In fact, our application will only be charged depending on its running time. In addition to that, it's also easier to manage. No extra settings are needed to be configured in order to run application.</p>\n\n<h3>The requirements</h3>\n<ol>\n<li><a href=\"https://www.python.org/downloads/release/python-370/\">Python 3.7</a></li>\n<li><a href=\"https://go.microsoft.com/fwlink/?linkid=2174087\">Azure Functions Core</a> (Not a hard requirement, but yeah life will get easier)</li>\n<li><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> + <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions\">Azure Function Extension</a> (Again, not a hard requirement)</li>\n<li><a href=\"https://learn.microsoft.com/en-us/azure/azure-functions/functions-overview?pivots=programming-language-python\">Azure Function Service</a></li>\n<li>A storage account</li>\n<li>A machine learning model</li>\n</ol>\n\n<h3>Steps</h3>\n<p>For this post purpose, I'm making use of a GCN model. To give more detail, it's a neural network model that accepts a graph data as input. After computation, it then outputs a node embedding visualization of the graph. If you're interested to learn more about Graph Convolutional Network, I suggest to check out this nice <a href=\"https://tkipf.github.io/graph-convolutional-networks/\">blog</a>. Otherwise, go ahead clone the repository <a href=\"https://github.com/wildanazz/gcn.git\">here</a>.</p>\n\n<p>Navigate to the gcn folder and open the __init__.py with code editor.</p>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2res7865ycvr3efsejg.png\"/>\n<p>Notice that the function makes use of HTTP trigger. So what's HTTP trigger? HTTP trigger lets us invoke function with HTTP request. There are several triggers available to use in Azure Function such as HTTP, timer, and blob.</p>\n\n<p>Afterward, open the local.settings.json and add a storage account connection string. A storage account is used to store the model computation result.</p>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ra2ixh2wussnmyy1sesa.png\"/>\n\n<p>Use the Azure Functions Core tool to initialize a Python function app.</p>\n<pre><code>$ func init</code></pre>\n<p>Run the following commands to create and activate a virtual environment named .venv. </p>\n<pre><code>$ py -3.7 -m venv .venv</code></pre>\n<pre><code>$ .venv\\scripts\\activate</code></pre>\n<p>Install the dependencies by running the following command. Installation may take a few minutes.</p>\n<pre><code>$ pip install --no-cache-dir -r requirements.txt</code></pre>\n<p>Start the function by starting the local Azure Function runtime host.</p>\n<pre><code>$ func start</code></pre>\n<h4>Note:</h4>\n<p>If encounter any errors, make sure the correct version of python is already installed. Otherwise, try upgrading the python pip and install the dependencies again. If the errors still persist, <a href=\"https://www.google.com/\">Google</a> is the best place to ask questions.</p>\n\n<h4>Extra steps (Nice to follow!)</h4>\n<p>We may now test our function. However, we need to download a <a>facebook.npz</a> dataset beforehand. What is it? It's a dummy preprocessed dataset that has been exported purposely for our model.</p>\n\n<p>Whilst the runtime host is running, send a POST request to http://localhost:7071/api/nn along with the dummy dataset. The process may take several minutes to complete.</p>\n\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlfrjceuaw7ghl7pp9vf.png\"/>\n<pre><code>$ py -3.7 request.py</code></pre>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr1ydkw13x438mbxhviz.png\"/>\n\n<h4>Note:</h4>\n<p>To get the public function endpoint, it needs to be deployed on Azure cloud platform. Check out the complete documentation on how to <a href=\"https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies?tabs=windows\">here</a>.</p>\n\n<h3>Conclusion</h3>\n<p>After following the steps above, I hope you guys can understand how to use Azure Function. It's important to note that it doesn't necessarily need to be a complex application such as machine learning model. It can be as simple as an API that updates a single row or column in a database.</p>","positive_reactions_count":0,"cover_image":null,"tag_list":["azure","python","deeplearning","machinelearning"],"canonical_url":"https://dev.to/wildanazz/deploy-a-machine-learning-model-to-azure-function-2gdf","reading_time_minutes":4,"user":{"name":"Wildan Aziz","username":"wildanazz","twitter_username":null,"github_username":"wildanazz","user_id":873881,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--MDREkI21--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--FfMc19EM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg"}},{"type_of":"article","id":1470382,"title":"Configure Nginx Reverse Proxy on Ubuntu VMs + SSL Encryption","description":"Hi folks! I recently just decided to host my own personal website on a cloud virtual machine. I've...","published":true,"published_at":"2023-05-16T19:31:39.239Z","slug":"configure-nginx-reverse-proxy-on-ubuntu-vms-ssl-encryption-o4m","path":"/wildanazz/configure-nginx-reverse-proxy-on-ubuntu-vms-ssl-encryption-o4m","url":"https://dev.to/wildanazz/configure-nginx-reverse-proxy-on-ubuntu-vms-ssl-encryption-o4m","comments_count":0,"public_reactions_count":2,"page_views_count":46,"published_timestamp":"2023-05-16T19:31:39Z","body_markdown":"<p>Hi folks! I recently just decided to host my own personal website on a cloud virtual machine. I've experimented a lot of things from doing it and now I'm more than excited to share some of my experiences. This article shows how I configured a reverse proxy and SSL encryption using Nginx.</p>\n<hr/>\n<h3>What is a reverse proxy?</h3>\n<p>It's literally another server that sits in front of our website server. That said, whenever a request comes from a client to our website server, it will be intercepted by the reverse proxy server.</P>\n<h3>Why do we even need one?</h3>\n<p>There are, of course, advantages of using a reverse proxy.</p>\n<ul>\n<li><p>Load balancing</p></li>\n<li><p>Protection from attacks</p></li>\n<li><p>SSL Encryption</p></li>\n<li><p>Caching</p></li>\n</ul>\n<h3>Setting up project</h3>\n<h4>Key technologies used</h4>\n<ol>\n<li>Virtual Machine - A running virtual machine instance. There are many virtual machines available for rent such as <a href=\"https://aws.amazon.com/ec2/\" target=\"_blank\">Amazon EC2</a>, <a href=\"https://cloud.google.com/compute\" target=\"_blank\">Google Compute Engine</a>, <a href=\"https://azure.microsoft.com/en-ca/products/virtual-machines/\" target=\"_blank\">Azure Virtual Machine</a>, etc.</li>\n<li>Domain Name - A registered domain name. Domain registrars like <a href=\"https://www.namecheap.com/\" target=\"_blank\">Namecheap</a>, <a href=\"https://domains.google.com/registrar/\" target=\"_blank\">Google Domains</a>, and <a href=\"https://www.godaddy.com/\" target=\"_blank\">GoDaddy</a> provide and let us manage domain names.</li>\n<li>Web Application - A server application. View code on github <a href=\"https://github.com/wildanazz/demo-web-application\" target=\"_blank\">here</a>.</li>\n<li>Nginx - Open source software that's often used for web serving and reverse proxying.</li>\n</ol>\n<h3>How it works</h3>\n<h4>Configuring Nginx as a reverse proxy</h4>\n<ol>\n<li>Install Nginx and make sure it runs successfully.\n<pre>\n<code>$ sudo apt update</code>\n<code>$ sudo apt install nginx</code>\n<code>$ sudo service nginx status</code>\n</pre></li>\n<li>Edit server configuration file in /etc/nginx/sites-available/.\n<pre>\n<code>$ sudo nano /etc/nginx/sites-available/wildanazz.com</code>\n</pre>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkubsk3ke84557e4cioh.png\" alt=\"NGINX Configuration\" /></li>\n<li>Make sure that there are no syntax errors in the server configuration file.\n<pre>\n<code>$ sudo nginx -t</code>\n</pre></li>\n<li>Enable the server configuration file by creating a link from sites-available directory to sites-enabled directory.\n<pre>\n<code>$ sudo rm link /etc/nginx/sites-enabled/default</code>\n<code>$ sudo ln -s /etc/nginx/sites-available/wildanazz.com /etc/nginx/sites-enabled/wildanazz.com</code>\n</pre></li>\n</ol>\n<h4>Testing application</h4>\n<ol>\n<li>Clone a demo server application.\n<pre>\n<code>$ git clone https://github.com/wildanazz/demo-web-application.git</code>\n</pre></li>\n<li>Run it.\n<pre>\n<code>$ sudo apt install nodejs && sudo npm install yarn -g</code>\n<code>$ cd demo</code>\n<code>$ yarn --frozen-lockfile && yarn start</code>\n</pre></li>\n<li>Copy and enter the ip address of the running virtual machine in a browser.</li>\n</ol>\n<h4>Installing SSL/TLS certificate</h4>\n<p>Before installing SSL/TLS certificate, the registered domain name needs to be pointing to the running virtual machine.</P>\n<ol>\n<li>Install Certbot to obtain a free SSL certificate.\n<pre>\n<code>$ sudo snap install --classic certbot</code>\n</pre>\n</li>\n<li>Run this code to let Certbot edit Nginx configuration automatically.\n<pre>\n<code>$ sudo certbot --nginx</code>\n</pre>\n</li>\n<li>Certbot can also renew the certificate automatically before it expires by running this code.\n<pre>\n<code>$ sudo certbot renew --dry-run</code>\n</pre>\n</li>\n</ol>\n<h3>Summary</h3>\n<p>In this article, I discussed how I set up Nginx reverse proxy server and added a SSL certificate for my website from the ground up. If you decide to host your own website on a virtual machine, I highly recommend you to utilize a reverse proxy server. If you have found something I could improve or that you would have done differently? Let me know in the comments.</P>","positive_reactions_count":2,"cover_image":null,"tag_list":["nginx","node","cloud","aws"],"canonical_url":"https://dev.to/wildanazz/configure-nginx-reverse-proxy-on-ubuntu-vms-ssl-encryption-o4m","reading_time_minutes":3,"user":{"name":"Wildan Aziz","username":"wildanazz","twitter_username":null,"github_username":"wildanazz","user_id":873881,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--MDREkI21--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--FfMc19EM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg"}},{"type_of":"article","id":1457995,"title":"Create and Deploy MERN Stack Application with Kubernetes","description":"git clone https://github.com/wildanazz/minote","published":true,"published_at":"2023-05-05T01:28:43.004Z","slug":"create-and-deploy-mern-application-with-on-kubernetes-4f06","path":"/wildanazz/create-and-deploy-mern-application-with-on-kubernetes-4f06","url":"https://dev.to/wildanazz/create-and-deploy-mern-application-with-on-kubernetes-4f06","comments_count":0,"public_reactions_count":0,"page_views_count":11,"published_timestamp":"2023-05-05T01:28:43Z","body_markdown":"`git clone https://github.com/wildanazz/minote`","positive_reactions_count":0,"cover_image":null,"tag_list":["docker","kubernetes","express","mongodb"],"canonical_url":"https://dev.to/wildanazz/create-and-deploy-mern-application-with-on-kubernetes-4f06","reading_time_minutes":1,"user":{"name":"Wildan Aziz","username":"wildanazz","twitter_username":null,"github_username":"wildanazz","user_id":873881,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--MDREkI21--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--FfMc19EM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg"}},{"type_of":"article","id":1436464,"title":"Build a Graph Convolutional Network Model on Facebook Dataset","description":"A Graph Convolutional Network, or GCN, is an approach for semi-supervised learning on...","published":true,"published_at":"2023-04-26T10:31:45.135Z","slug":"gcn-on-facebook-dataset-4aed","path":"/wildanazz/gcn-on-facebook-dataset-4aed","url":"https://dev.to/wildanazz/gcn-on-facebook-dataset-4aed","comments_count":0,"public_reactions_count":0,"page_views_count":13,"published_timestamp":"2023-04-26T10:31:45Z","body_markdown":"A Graph Convolutional Network, or GCN, is an approach for semi-supervised learning on graph-structured data. It is based on an efficient variant of convolutional neural networks which operate directly on graphs. The choice of convolutional architecture is motivated via a localized first-order approximation of spectral graph convolutions. The model scales linearly in the number of graph edges and learns hidden layer representations that encode both local graph structure and features of nodes.\n\nConvolutional Neural Network (CNN) is class of artificial neural network.\n\nGCN is neural network for a graph data. The graph consist of two components: nodes and edges.Each node in the graph have features. Our task is to label each node with given categorical class (Node Classification)\n\n\nNeural Network Component:\n1. Input Layer\n2. Multiple Hidden Layer\n3. Output Layer\n\nHow to build the model:\n1. Create N by N adjacency matrix (N is nodes number).\n2. Create N by D matrix (D is feature number).\n3. Normalize the adjacency and the features matrix.\n4. Create a two layer Graph Convolutional Network.\n5. Train & test dataset.","positive_reactions_count":0,"cover_image":null,"tag_list":["machinelearning","deeplearning","tensorflow","jupyter"],"canonical_url":"https://dev.to/wildanazz/gcn-on-facebook-dataset-4aed","reading_time_minutes":1,"user":{"name":"Wildan Aziz","username":"wildanazz","twitter_username":null,"github_username":"wildanazz","user_id":873881,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--MDREkI21--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--FfMc19EM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg"}},{"type_of":"article","id":1448406,"title":"Deploy Docker Application to Virtual Machine Using Github Actions (CI/CD)","description":"Hi there! A quick question. Have you ever been unexpectedly productive during weekend? I remember...","published":true,"published_at":"2023-04-26T08:06:07.341Z","slug":"deploy-docker-application-to-droplet-using-github-actions-cicd-o8a","path":"/wildanazz/deploy-docker-application-to-droplet-using-github-actions-cicd-o8a","url":"https://dev.to/wildanazz/deploy-docker-application-to-droplet-using-github-actions-cicd-o8a","comments_count":0,"public_reactions_count":0,"page_views_count":30,"published_timestamp":"2023-04-26T08:06:07Z","body_markdown":"<p>Hi there! A quick question. Have you ever been unexpectedly productive during weekend? I remember spending all day doing a research on whether or not cereal was a soup 🥁.</P>\n\n<p>Back to the topic, Microservice architecture has been quite popular for years. When building an application for Microservices, we probably want it to be deployed on a virtual machine let's say for scalling purposes. </p>\n\n<p>In addition, a server automation can be very useful for us since it automates our application build, test, and deployment pipeline before deploying it to a virtual machine.</p>\n\n<p>This post will help you carefully how to deploy your containerized application on a virtual machine using GitHub actions (CI/CD).</p>\n<hr/>\n\n<h3>Prerequisites</h3>\n<ul>\n<li>Virtual machine - A running virtual machine instance. For this demo, I'm using a DigitalOcean droplet as I have it running already. But there shouldn't be a big difference with other virtual machine running on cloud platforms such as Amazon and Google Cloud Platform.</li>\n<li>Docker - An open source software that consist of useful tools to containerize and manage our application. The docker software needs to be installed in the running virtual machine instance.</li>\n<li>Git - A distributed version control system to manage our application code.</li>\n<li>Web Application - An application server. A code example solely for demo can be viewed on github <a href=\"https://github.com/wildanazz/demo-web-application\" target=\"_blank\">here</a>.</li>\n</ul>\n<h3>What are the steps?</h3>\n<p>There are three files that are important for our deployment process.</p>\n<p>workflow.yml tells us how our application deployed in a virtual machine.</p>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28whbton44qz5nxvrvf6.png\" alt=\"workflow\" />\n<p>Dockerfile is a set of instructions that run in a sequence in order to build an image of our application.</p>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc6aw90kquwvos0uzvwb.png\" alt=\"dockerfile\" />\n<p>.dockerignore is a file that tells the docker what file(s) are not to include in the build process</p>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0dz8ij4epm4wy1ok27i.png\" alt=\"dockerignore\" />","positive_reactions_count":0,"cover_image":null,"tag_list":["docker","githubactions","cloud","devops"],"canonical_url":"https://dev.to/wildanazz/deploy-docker-application-to-droplet-using-github-actions-cicd-o8a","reading_time_minutes":2,"user":{"name":"Wildan Aziz","username":"wildanazz","twitter_username":null,"github_username":"wildanazz","user_id":873881,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--MDREkI21--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--FfMc19EM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/873881/75d636c4-9e38-48fd-a32b-1ebcae531d1c.jpeg"}}]